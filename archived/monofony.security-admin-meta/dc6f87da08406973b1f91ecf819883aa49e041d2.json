{
    "manifests": {
        "monofony/security-admin-meta": {
            "manifest": {
                "copy-from-recipe": {
                    "src/": "%SRC_DIR%/"
                }
            },
            "files": {
                "src/Security/Infrastructure/Admin/Sylius/Grid/AdminUserGrid.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\Grid;",
                        "",
                        "use App\\Security\\Infrastructure\\Persistence\\Doctrine\\ORM\\Entity\\SecurityAdminUser;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\Action\\CreateAction;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\Action\\DeleteAction;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\Action\\UpdateAction;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\ActionGroup\\ItemActionGroup;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\ActionGroup\\MainActionGroup;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\Field\\StringField;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\Filter\\StringFilter;",
                        "use Sylius\\Bundle\\GridBundle\\Builder\\GridBuilderInterface;",
                        "use Sylius\\Bundle\\GridBundle\\Grid\\AbstractGrid;",
                        "use Sylius\\Bundle\\GridBundle\\Grid\\ResourceAwareGridInterface;",
                        "",
                        "final class AdminUserGrid extends AbstractGrid implements ResourceAwareGridInterface",
                        "{",
                        "    #[\\Override]",
                        "    public static function getName(): string",
                        "    {",
                        "        return 'app_security_admin_user';",
                        "    }",
                        "",
                        "    #[\\Override]",
                        "    public function buildGrid(GridBuilderInterface $gridBuilder): void",
                        "    {",
                        "        $gridBuilder",
                        "            ->setProvider(AdminUserGridProvider::class)",
                        "            ->addFilter(",
                        "                StringFilter::create('search')",
                        "                    ->setLabel('sylius.ui.search')",
                        "                    ->setFormOptions([",
                        "                        'type' => 'contains',",
                        "                    ])",
                        "            )",
                        "            ->orderBy('email', 'desc')",
                        "            ->addField(",
                        "                StringField::create('email')",
                        "                    ->setLabel('app.ui.email')",
                        "                    ->setSortable(true)",
                        "            )",
                        "            ->addActionGroup(",
                        "                MainActionGroup::create(",
                        "                    CreateAction::create()",
                        "                )",
                        "            )",
                        "            ->addActionGroup(",
                        "                ItemActionGroup::create(",
                        "                    UpdateAction::create(),",
                        "                    DeleteAction::create(),",
                        "                )",
                        "            )",
                        "//            ->addActionGroup(BulkActionGroup::create(DeleteAction::create()))",
                        "        ;",
                        "    }",
                        "",
                        "    #[\\Override]",
                        "    public function getResourceClass(): string",
                        "    {",
                        "        return SecurityAdminUser::class;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Sylius/Grid/AdminUserGridProvider.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\Grid;",
                        "",
                        "use App\\Security\\Application\\AdminUser\\Query\\FindAdminUsersQuery;",
                        "use App\\Security\\Domain\\Repository\\AdminUserRepositoryInterface;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Resource\\AdminUserResource;",
                        "use App\\Shared\\Application\\Query\\QueryBusInterface;",
                        "use App\\Shared\\Infrastructure\\Sylius\\Grid\\GridPageResolver;",
                        "use Pagerfanta\\Adapter\\FixedAdapter;",
                        "use Pagerfanta\\Pagerfanta;",
                        "use Sylius\\Component\\Grid\\Data\\DataProviderInterface;",
                        "use Sylius\\Component\\Grid\\Definition\\Grid;",
                        "use Sylius\\Component\\Grid\\Parameters;",
                        "use Webmozart\\Assert\\Assert;",
                        "",
                        "final readonly class AdminUserGridProvider implements DataProviderInterface",
                        "{",
                        "    public function __construct(",
                        "        private QueryBusInterface $queryBus,",
                        "    ) {",
                        "    }",
                        "",
                        "    public function getData(Grid $grid, Parameters $parameters): Pagerfanta",
                        "    {",
                        "        /** @var array<string, string> $sorting */",
                        "        $sorting = $parameters->get('sorting') ?? $grid->getSorting();",
                        "",
                        "        $criteria = $parameters->get('criteria') ?? [];",
                        "",
                        "        /** @var AdminUserRepositoryInterface $models */",
                        "        $models = $this->queryBus->ask(new FindAdminUsersQuery(",
                        "            GridPageResolver::getCurrentPage($grid, $parameters),",
                        "            GridPageResolver::getItemsPerPage($grid, $parameters),",
                        "            emailSortingAsc: 'asc' === ($sorting['email'] ?? null) ? true : null,",
                        "            emailSortingDesc: 'desc' === ($sorting['email'] ?? null) ? true : null,",
                        "            searchQuery: !empty($criteria['search']['value'] ?? null) ? $criteria['search']['value'] : null,",
                        "        ));",
                        "",
                        "        $data = [];",
                        "        foreach ($models as $model) {",
                        "            $data[] = AdminUserResource::fromModel($model);",
                        "        }",
                        "",
                        "        $paginator = $models->paginator();",
                        "        Assert::notNull($paginator);",
                        "",
                        "        return new Pagerfanta(new FixedAdapter($paginator->getTotalItems(), $data));",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Sylius/Resource/AdminUserResource.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\Resource;",
                        "",
                        "use App\\Security\\Domain\\Model\\User\\AdminUser;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Grid\\AdminUserGrid;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Processor\\CreateAdminUserProcessor;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Processor\\DeleteAdminUserProcessor;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Processor\\UpdateAdminUserProcessor;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Provider\\AdminUserItemProvider;",
                        "use App\\Security\\Infrastructure\\Admin\\Symfony\\Form\\Type\\AdminUserType;",
                        "use Sylius\\Resource\\Metadata\\AsResource;",
                        "use Sylius\\Resource\\Metadata\\Create;",
                        "use Sylius\\Resource\\Metadata\\Delete;",
                        "use Sylius\\Resource\\Metadata\\Index;",
                        "use Sylius\\Resource\\Metadata\\Update;",
                        "use Sylius\\Resource\\Model\\ResourceInterface;",
                        "",
                        "#[AsResource(",
                        "    section: 'admin_security',",
                        "    formType: AdminUserType::class,",
                        "    templatesDir: '@SyliusAdminUi/crud',",
                        "    routePrefix: 'admin/security',",
                        "    driver: false,",
                        "    operations: [",
                        "        new Create(",
                        "            processor: CreateAdminUserProcessor::class,",
                        "        ),",
                        "        new Update(",
                        "            provider: AdminUserItemProvider::class,",
                        "            processor: UpdateAdminUserProcessor::class,",
                        "        ),",
                        "        new Delete(",
                        "            provider: AdminUserItemProvider::class,",
                        "            processor: DeleteAdminUserProcessor::class,",
                        "        ),",
                        "        new Index(",
                        "            grid: AdminUserGrid::class,",
                        "        ),",
                        "    ],",
                        ")]",
                        "class AdminUserResource implements ResourceInterface",
                        "{",
                        "    public function __construct(",
                        "        public string|null $id = null,",
                        "        public string|null $email = null,",
                        "        #[\\SensitiveParameter]",
                        "        public string|null $plainPassword = null,",
                        "    ) {",
                        "    }",
                        "",
                        "    public static function fromModel(AdminUser $user): self",
                        "    {",
                        "        return new self(",
                        "            $user->id->value,",
                        "            $user->email->value,",
                        "            $user->password?->value,",
                        "        );",
                        "    }",
                        "",
                        "    #[\\Override]",
                        "    public function getId(): string|null",
                        "    {",
                        "        return $this->id;",
                        "    }",
                        "",
                        "    public function getEmail(): string|null",
                        "    {",
                        "        return $this->email;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Sylius/State/AdminUser/Processor/CreateAdminUserProcessor.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Processor;",
                        "",
                        "use App\\Security\\Application\\AdminUser\\Command\\CreateAdminUserCommand;",
                        "use App\\Security\\Domain\\Model\\User\\AdminUser;",
                        "use App\\Security\\Domain\\ValueObject\\User\\AdminUserEmail;",
                        "use App\\Security\\Domain\\ValueObject\\User\\AdminUserPassword;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Resource\\AdminUserResource;",
                        "use App\\Shared\\Application\\Command\\CommandBusInterface;",
                        "use Sylius\\Resource\\Context\\Context;",
                        "use Sylius\\Resource\\Metadata\\Operation;",
                        "use Sylius\\Resource\\State\\ProcessorInterface;",
                        "use Webmozart\\Assert\\Assert;",
                        "",
                        "final readonly class CreateAdminUserProcessor implements ProcessorInterface",
                        "{",
                        "    public function __construct(",
                        "        private CommandBusInterface $commandBus,",
                        "    ) {",
                        "    }",
                        "",
                        "    /**",
                        "     * @param AdminUserResource|mixed $data",
                        "     */",
                        "    public function process(mixed $data, Operation $operation, Context $context): AdminUserResource",
                        "    {",
                        "        Assert::isInstanceOf($data, AdminUserResource::class);",
                        "",
                        "        Assert::notNull($data->email);",
                        "        Assert::notNull($data->plainPassword);",
                        "",
                        "        $command = new CreateAdminUserCommand(",
                        "            new AdminUserEmail($data->email),",
                        "            new AdminUserPassword($data->plainPassword),",
                        "        );",
                        "",
                        "        /** @var AdminUser $model */",
                        "        $model = $this->commandBus->dispatch($command);",
                        "",
                        "        return AdminUserResource::fromModel($model);",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Sylius/State/AdminUser/Processor/DeleteAdminUserProcessor.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Processor;",
                        "",
                        "use App\\Security\\Application\\AdminUser\\Command\\DeleteAdminUserCommand;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Resource\\AdminUserResource;",
                        "use App\\Shared\\Application\\Command\\CommandBusInterface;",
                        "use Sylius\\Resource\\Context\\Context;",
                        "use Sylius\\Resource\\Metadata\\Operation;",
                        "use Sylius\\Resource\\State\\ProcessorInterface;",
                        "use Webmozart\\Assert\\Assert;",
                        "",
                        "final readonly class DeleteAdminUserProcessor implements ProcessorInterface",
                        "{",
                        "    public function __construct(",
                        "        private CommandBusInterface $commandBus,",
                        "    ) {",
                        "    }",
                        "",
                        "    public function process(mixed $data, Operation $operation, Context $context): null",
                        "    {",
                        "        Assert::isInstanceOf($data, AdminUserResource::class);",
                        "",
                        "        $this->commandBus->dispatch(new DeleteAdminUserCommand((string) $data->id));",
                        "",
                        "        return null;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Sylius/State/AdminUser/Processor/UpdateAdminUserProcessor.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Processor;",
                        "",
                        "use App\\Security\\Application\\AdminUser\\Command\\UpdateAdminUserCommand;",
                        "use App\\Security\\Domain\\Model\\User\\AdminUser;",
                        "use App\\Security\\Domain\\ValueObject\\User\\AdminUserEmail;",
                        "use App\\Security\\Domain\\ValueObject\\User\\AdminUserPassword;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Resource\\AdminUserResource;",
                        "use App\\Shared\\Application\\Command\\CommandBusInterface;",
                        "use Sylius\\Resource\\Context\\Context;",
                        "use Sylius\\Resource\\Metadata\\Operation;",
                        "use Sylius\\Resource\\State\\ProcessorInterface;",
                        "use Webmozart\\Assert\\Assert;",
                        "",
                        "final readonly class UpdateAdminUserProcessor implements ProcessorInterface",
                        "{",
                        "    public function __construct(",
                        "        private CommandBusInterface $commandBus,",
                        "    ) {",
                        "    }",
                        "",
                        "    /**",
                        "     * @param AdminUserResource|mixed $data",
                        "     */",
                        "    public function process(mixed $data, Operation $operation, Context $context): AdminUserResource",
                        "    {",
                        "        Assert::isInstanceOf($data, AdminUserResource::class);",
                        "",
                        "        Assert::notNull($data->id);",
                        "        Assert::notNull($data->email);",
                        "",
                        "        $command = new UpdateAdminUserCommand(",
                        "            (string) $data->id,",
                        "            new AdminUserEmail($data->email),",
                        "            $data->plainPassword ? new AdminUserPassword($data->plainPassword) : null,",
                        "        );",
                        "",
                        "        /** @var AdminUser $model */",
                        "        $model = $this->commandBus->dispatch($command);",
                        "",
                        "        return AdminUserResource::fromModel($model);",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Sylius/State/AdminUser/Provider/AdminUserItemProvider.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Sylius\\State\\AdminUser\\Provider;",
                        "",
                        "use App\\Security\\Application\\AdminUser\\Query\\FindAdminUserQuery;",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Resource\\AdminUserResource;",
                        "use App\\Shared\\Application\\Query\\QueryBusInterface;",
                        "use Sylius\\Resource\\Context\\Context;",
                        "use Sylius\\Resource\\Context\\Option\\RequestOption;",
                        "use Sylius\\Resource\\Metadata\\Operation;",
                        "use Sylius\\Resource\\State\\ProviderInterface;",
                        "use Webmozart\\Assert\\Assert;",
                        "",
                        "final class AdminUserItemProvider implements ProviderInterface",
                        "{",
                        "    public function __construct(",
                        "        private QueryBusInterface $queryBus,",
                        "    ) {",
                        "    }",
                        "",
                        "    public function provide(Operation $operation, Context $context): AdminUserResource|null",
                        "    {",
                        "        $request = $context->get(RequestOption::class)?->request();",
                        "        Assert::notNull($request);",
                        "",
                        "        $id = (string) $request->attributes->get('id');",
                        "",
                        "        $model = $this->queryBus->ask(new FindAdminUserQuery($id));",
                        "",
                        "        return null !== $model ? AdminUserResource::fromModel($model) : null;",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "src/Security/Infrastructure/Admin/Symfony/Form/Type/AdminUserType.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace App\\Security\\Infrastructure\\Admin\\Symfony\\Form\\Type;",
                        "",
                        "use App\\Security\\Infrastructure\\Admin\\Sylius\\Resource\\AdminUserResource;",
                        "use Symfony\\Component\\Form\\AbstractType;",
                        "use Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType;",
                        "use Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType;",
                        "use Symfony\\Component\\Form\\FormBuilderInterface;",
                        "use Symfony\\Component\\OptionsResolver\\OptionsResolver;",
                        "",
                        "class AdminUserType extends AbstractType",
                        "{",
                        "    #[\\Override]",
                        "    public function buildForm(FormBuilderInterface $builder, array $options): void",
                        "    {",
                        "        $builder",
                        "            ->add('email', EmailType::class, [",
                        "                'label' => 'app.form.user.email',",
                        "            ])",
                        "            ->add('plainPassword', PasswordType::class, [",
                        "                'label' => 'app.form.user.password',",
                        "            ])",
                        "        ;",
                        "    }",
                        "",
                        "    #[\\Override]",
                        "    public function configureOptions(OptionsResolver $resolver): void",
                        "    {",
                        "        $resolver",
                        "            ->setDefaults([",
                        "                'data_class' => AdminUserResource::class,",
                        "            ])",
                        "        ;",
                        "    }",
                        "",
                        "    #[\\Override]",
                        "    public function getBlockPrefix(): string",
                        "    {",
                        "        return 'sylius_admin_user';",
                        "    }",
                        "}",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "dc6f87da08406973b1f91ecf819883aa49e041d2"
        }
    }
}
